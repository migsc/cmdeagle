name: Release

on:
  push:
    tags:
    - 'v*.*.*'

permissions:
  contents: write # This is required for creating releases and uploading assets

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.22.0'
        check-latest: true

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm-publish:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org/'
        scope: '@migsc'

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Copy and modify README for npm
      run: |
        cp docs/README.md README.md

        # Add npm installation instructions at the top
        sed -i '1s/^/# cmdeagle\n\nA powerful and precise CLI framework for any language.\n\n/' README.md

        # Find and replace the Go installation section
        sed -i '/### 1) Install it with Go/,/```/c\
        ### 1) Install it with npm or Go\n\
        \n\
        The easiest way to work with cmdeagle is by installing it with npm:\n\
        \n\
        ```sh\n\
        npm install -g cmdeagle\n\
        ```\n\
        \n\
        Alternatively, you can install it with [Golang'\''s package manager](https://go.dev/doc/install) on a unix-like system (macOS, Linux, etc):\n\
        \n\
        ```sh\n\
        go install github.com/migsc/cmdeagle@latest\n\
        ```' README.md

    - name: Install dependencies
      run: npm ci

    - name: Fix package.json
      run: npm pkg fix

    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        CMDEAGLE_VERSION: ${{ env.VERSION }}
